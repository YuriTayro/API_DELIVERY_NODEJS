openapi: "3.0.0"
info:
  title: "API Delivery Simulator"
  description: >
    API para localização e gerenciamento de endereços de entregas,
    simulando um serviço de delivery para integração com sistemas PHP.
    O fluxo de autenticação permite enviar um login e uma senha (em hash)
    para obter um token JWT, que deverá ser enviado no header das requisições.
    
    **Credenciais de exemplo para testes:**
    - Login: admin@delivery.com
    - Senha original: admin123
    - Hash (exemplo MD5): 0192023a7bbd73250516f069df18b500
  version: "1.0.0"
servers:
  - url: "https://api-delivery-nodejs.vercel.app/api"  # URL de produção
paths:
  /auth/token:
    post:
      summary: "Autenticação e geração de token"
      description: >
        Recebe as credenciais do usuário (login e senha em hash) e retorna
        um token JWT para autenticação nas demais requisições.
      requestBody:
        description: "Credenciais de acesso"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  example: "admin@delivery.com"
                password:
                  type: string
                  example: "0192023a7bbd73250516f069df18b500"
      responses:
        '200':
          description: "Token gerado com sucesso"
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: "Credenciais inválidas"
  /delivery/addresses:
    get:
      summary: "Listar endereços de entrega"
      description: >
        Retorna uma lista de endereços de entrega disponíveis para simulação.
        Requer autenticação via token.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "Lista de endereços retornada com sucesso"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    rua:
                      type: string
                      example: "Rua das Flores"
                    numero:
                      type: string
                      example: "123"
                    bairro:
                      type: string
                      example: "Centro"
                    cidade:
                      type: string
                      example: "São Paulo"
                    estado:
                      type: string
                      example: "SP"
                    cep:
                      type: string
                      example: "01001-000"
        '401':
          description: "Token inválido ou não informado"
    post:
      summary: "Criar novo endereço de entrega"
      description: >
        Cria um novo registro de endereço de entrega para a simulação.
        Requer autenticação via token.
      security:
        - bearerAuth: []
      requestBody:
        description: "Dados do endereço"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rua:
                  type: string
                  example: "Rua das Flores"
                numero:
                  type: string
                  example: "123"
                bairro:
                  type: string
                  example: "Centro"
                cidade:
                  type: string
                  example: "São Paulo"
                estado:
                  type: string
                  example: "SP"
                cep:
                  type: string
                  example: "01001-000"
      responses:
        '201':
          description: "Endereço criado com sucesso"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  message:
                    type: string
                    example: "Endereço criado com sucesso."
        '401':
          description: "Token inválido ou não informado"
  /delivery/addresses/{id}:
    get:
      summary: "Obter detalhes de um endereço de entrega"
      description: >
        Retorna os detalhes de um endereço de entrega específico, identificado pelo ID.
        Requer autenticação via token.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: "ID do endereço de entrega"
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Detalhes do endereço"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  rua:
                    type: string
                    example: "Rua das Flores"
                  numero:
                    type: string
                    example: "123"
                  bairro:
                    type: string
                    example: "Centro"
                  cidade:
                    type: string
                    example: "São Paulo"
                  estado:
                    type: string
                    example: "SP"
                  cep:
                    type: string
                    example: "01001-000"
        '404':
          description: "Endereço não encontrado"
        '401':
          description: "Token inválido ou não informado"
    put:
      summary: "Atualizar um endereço de entrega"
      description: >
        Atualiza os dados de um endereço de entrega existente.
        Requer autenticação via token.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: "ID do endereço de entrega"
          required: true
          schema:
            type: integer
      requestBody:
        description: "Novos dados do endereço"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rua:
                  type: string
                  example: "Rua Nova"
                numero:
                  type: string
                  example: "456"
                bairro:
                  type: string
                  example: "Jardim"
                cidade:
                  type: string
                  example: "São Paulo"
                estado:
                  type: string
                  example: "SP"
                cep:
                  type: string
                  example: "01002-000"
      responses:
        '200':
          description: "Endereço atualizado com sucesso"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Endereço atualizado com sucesso."
        '404':
          description: "Endereço não encontrado"
        '401':
          description: "Token inválido ou não informado"
    delete:
      summary: "Excluir um endereço de entrega"
      description: >
        Remove um endereço de entrega existente.
        Requer autenticação via token.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: "ID do endereço de entrega"
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Endereço removido com sucesso"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Endereço removido com sucesso."
        '404':
          description: "Endereço não encontrado"
        '401':
          description: "Token inválido ou não informado"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
